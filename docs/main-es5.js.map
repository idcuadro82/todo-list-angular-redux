{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/todo/todo-add/todo-add.component.html","webpack:///./src/app/todo/todo-footer/todo-footer.component.html","webpack:///./src/app/todo/todo-item/todo-item.component.html","webpack:///./src/app/todo/todo-list/todo-list.component.html","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.reducers.ts","webpack:///./src/app/filter/filter.actions.ts","webpack:///./src/app/filter/filter.pipe.ts","webpack:///./src/app/filter/filter.reducer.ts","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/todo/todo-add/todo-add.component.ts","webpack:///./src/app/todo/todo-footer/todo-footer.component.ts","webpack:///./src/app/todo/todo-item/todo-item.component.ts","webpack:///./src/app/todo/todo-list/todo-list.component.ts","webpack:///./src/app/todo/todo.actions.ts","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/app/todo/todo.model.ts","webpack:///./src/app/todo/todo.reducer.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-todo></app-todo>\\n<app-footer></app-footer>\\n\"","module.exports = \"<footer class=\\\"info\\\">\\n  <p>Double-click to edit a todo</p>\\n  <p>Template by <a href=\\\"http://sindresorhus.com\\\">Sindre Sorhus</a></p>\\n  <p>Edited by <a href=\\\"http://ivan-cuadro.com\\\">Ivan Cuadro</a></p>\\n  <p>Part of <a href=\\\"http://todomvc.com\\\">TodoMVC</a></p>\\n</footer>\\n\"","module.exports = \"<header class=\\\"header\\\">\\n  <h1>todos</h1>\\n  <input\\n    class=\\\"new-todo\\\"\\n    placeholder=\\\"What needs to be done?\\\"\\n    [formControl]=\\\"textTodoControl\\\"\\n    (keyup.enter)=\\\"addTodo()\\\"\\n    autofocus>\\n</header>\\n\"","module.exports = \"<footer class=\\\"footer\\\">\\n  <span class=\\\"todo-count\\\"><strong>{{ todosLength }}</strong> item left</span>\\n  <ul class=\\\"filters\\\">\\n    <li (click)=\\\"changeFilter(filter)\\\" *ngFor=\\\"let filter of validFilters\\\">\\n      <a [ngClass]=\\\"{'selected': filter === currentFilter}\\\">{{ getFilterTitle(filter) }}</a>\\n    </li>\\n  </ul>\\n  <button class=\\\"clear-completed\\\" (click)=\\\"clearAllCompleted()\\\">Clear completed</button>\\n</footer>\\n\"","module.exports = \"<li [ngClass]=\\\"{'completed': todo.completed, 'editing': editingText }\\\">\\n  <div class=\\\"view\\\">\\n    <input class=\\\"toggle\\\"\\n           type=\\\"checkbox\\\"\\n           [formControl]=\\\"checkCompletedControl\\\"\\n           [checked]=\\\"todo.completed\\\">\\n    <label (dblclick)=\\\"startEdition()\\\">{{ todo.text }}</label>\\n    <button class=\\\"destroy\\\" (click)=\\\"deleteTodo()\\\"></button>\\n  </div>\\n  <input class=\\\"edit\\\"\\n         [value]=\\\"todo.text\\\"\\n         [formControl]=\\\"templateTextControl\\\"\\n         (keyup.enter)=\\\"endEdition($event);\\\"\\n         (blur)=\\\"endEdition($event)\\\"\\n         #editTextInput>\\n</li>\\n\"","module.exports = \"<ul class=\\\"todo-list\\\">\\n  <app-todo-item *ngFor=\\\"let todo of todoList | filterTodo: currentFilter\\\" [todo]=\\\"todo\\\"></app-todo-item>\\n</ul>\\n\"","module.exports = \"<section class=\\\"todoapp\\\">\\n  <app-todo-add></app-todo-add>\\n  <section class=\\\"main\\\">\\n    <input id=\\\"toggle-all\\\" class=\\\"toggle-all\\\" type=\\\"checkbox\\\" [formControl]=\\\"checkToggleAll\\\">\\n    <label for=\\\"toggle-all\\\">Mark all as complete</label>\\n    <app-todo-list></app-todo-list>\\n  </section>\\n  <app-todo-footer></app-todo-footer>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'todo-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// ngRx\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { appReducers } from './app.reducers';\n\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { TodoListComponent } from './todo/todo-list/todo-list.component';\nimport { TodoItemComponent } from './todo/todo-item/todo-item.component';\nimport { TodoFooterComponent } from './todo/todo-footer/todo-footer.component';\nimport { TodoAddComponent } from './todo/todo-add/todo-add.component';\nimport { environment } from 'src/environments/environment';\nimport { FilterPipe } from './filter/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    TodoComponent,\n    TodoListComponent,\n    TodoItemComponent,\n    TodoFooterComponent,\n    TodoAddComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { todoReducer } from './todo/todo.reducer';\nimport { filterReducer } from './filter/filter.reducer';\nimport { validFilters } from './filter/filter.actions';\nimport { Todo } from './todo/todo.model';\n\nexport interface AppState {\n  todos: Todo[];\n  filter: validFilters;\n}\n\nexport const appReducers: ActionReducerMap<AppState> = {\n  todos: todoReducer,\n  filter: filterReducer\n};\n","import { Action } from '@ngrx/store';\n\nexport const SET_FILTER = '[FILTER] Set Filter';\n\nexport type validFilters = 'all' | 'completed' | 'pending';\n\nexport class SetFilterAction implements Action {\n  readonly type = SET_FILTER;\n  constructor(public filter: validFilters) { }\n}\n\nexport type FilterActions = SetFilterAction;\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Todo } from '../todo/todo.model';\nimport * as fromFiltersAction from 'src/app/filter/filter.actions';\n\n@Pipe({\n  name: 'filterTodo'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(todos: Todo[], filter: fromFiltersAction.validFilters): Todo[] {\n    switch (filter) {\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      case 'pending':\n        return todos.filter(todo => !todo.completed);\n      default:\n        return todos;\n    }\n  }\n}\n","import * as fromFilterActions from './filter.actions';\n\nconst initialState: fromFilterActions.validFilters = 'all';\n\nexport function filterReducer(state = initialState, action: fromFilterActions.FilterActions): fromFilterActions.validFilters {\n  switch (action.type) {\n    case fromFilterActions.SET_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: []\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/app.reducers';\nimport { AddTodoAction } from '../todo.actions';\n\n\n@Component({\n  selector: 'app-todo-add',\n  templateUrl: './todo-add.component.html',\n  styles: []\n})\nexport class TodoAddComponent implements OnInit {\n  textTodoControl: FormControl;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.textTodoControl = new FormControl('', Validators.required);\n  }\n\n  addTodo(): void {\n    if (this.textTodoControl.valid) {\n      const action = new AddTodoAction(this.textTodoControl.value);\n      this.store.dispatch(action);\n      this.textTodoControl.setValue('');\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromFiltersAction from 'src/app/filter/filter.actions';\nimport * as fromTodoAction from 'src/app/todo/todo.actions';\nimport { AppState } from 'src/app/app.reducers';\nimport { Todo } from '../todo.model';\n\n@Component({\n  selector: 'app-todo-footer',\n  templateUrl: './todo-footer.component.html',\n  styles: []\n})\nexport class TodoFooterComponent implements OnInit {\n  validFilters: fromFiltersAction.validFilters[] = ['all', 'completed', 'pending'];\n  currentFilter: fromFiltersAction.validFilters;\n  todosLength = 0;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.store.subscribe(state => {\n      this.currentFilter = state.filter;\n      this.countPending(state.todos);\n    });\n  }\n\n  changeFilter(newFilter: fromFiltersAction.validFilters): void {\n    const action = new fromFiltersAction.SetFilterAction(newFilter);\n    this.store.dispatch(action);\n  }\n\n  getFilterTitle(filter): string {\n    return filter.charAt(0).toUpperCase() + filter.slice(1);\n  }\n\n  countPending(todos: Todo[]): void {\n    this.todosLength = todos.filter(todo => !todo.completed).length;\n  }\n\n  clearAllCompleted(): void {\n    const action = new fromTodoAction.ClearAllCompletedTodosAction();\n    this.store.dispatch(action);\n  }\n}\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from 'src/app/app.reducers';\nimport { Todo } from '../todo.model';\nimport { ToggleTodoAction, EditTodoAction, DeleteTodoAction } from '../todo.actions';\n\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styles: []\n})\nexport class TodoItemComponent implements OnInit {\n  @Input() todo: Todo;\n  @ViewChild('editTextInput', { static: false }) editTextInput: ElementRef;\n  checkCompletedControl: FormControl;\n  templateTextControl: FormControl;\n  editingText: boolean;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.checkCompletedControl = new FormControl(this.todo.completed);\n    this.templateTextControl = new FormControl(this.todo.text, Validators.required);\n    this.checkCompletedControl.valueChanges.subscribe(() => {\n      const action = new ToggleTodoAction(this.todo.id);\n      this.store.dispatch(action);\n    });\n  }\n\n  startEdition() {\n    this.editingText = true;\n    setTimeout(() => {\n      this.editTextInput.nativeElement.select();\n    }, 200);\n  }\n\n  endEdition(event) {\n    this.editingText = false;\n    if (event instanceof KeyboardEvent && this.templateTextControl.valid) {\n      const action = new EditTodoAction(this.todo.id, this.templateTextControl.value);\n      this.store.dispatch(action);\n    }\n  }\n\n  deleteTodo() {\n    const action = new DeleteTodoAction(this.todo.id);\n    this.store.dispatch(action);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from 'src/app/app.reducers';\nimport { Todo } from '../todo.model';\nimport * as fromFiltersAction from 'src/app/filter/filter.actions';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styles: []\n})\nexport class TodoListComponent implements OnInit {\n  todoList: Todo[] = [];\n  currentFilter: fromFiltersAction.validFilters;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.store.subscribe(state => {\n      this.currentFilter = state.filter;\n      this.todoList = [...state.todos];\n    });\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport const ADD_TODO = '[TODO] Add todo';\nexport const TOGGLE_TODO = '[TODO] Toggle todo';\nexport const EDIT_TODO = '[TODO] Edit todo';\nexport const DELETE_TODO = '[TODO] Delete todo';\nexport const TOGGLE_ALL_TODOS = '[TODO] Toggle all todos';\nexport const CLEAR_ALL_COMPLETED_TODOS = '[TODO] Clear all completed todos';\n\nexport class AddTodoAction implements Action {\n  readonly type = ADD_TODO;\n  constructor(public text: string) { }\n}\n\nexport class ToggleTodoAction implements Action {\n  readonly type = TOGGLE_TODO;\n  constructor(public id: number) { }\n}\n\nexport class EditTodoAction implements Action {\n  readonly type = EDIT_TODO;\n  constructor(public id: number, public text: string) { }\n}\n\nexport class DeleteTodoAction implements Action {\n  readonly type = DELETE_TODO;\n  constructor(public id: number) { }\n}\n\nexport class ToggleAllTodosAction implements Action {\n  readonly type = TOGGLE_ALL_TODOS;\n  constructor(public completed: boolean) { }\n}\n\nexport class ClearAllCompletedTodosAction implements Action {\n  readonly type = CLEAR_ALL_COMPLETED_TODOS;\n}\n\nexport type TodoActions = AddTodoAction |\n  ToggleTodoAction |\n  EditTodoAction |\n  DeleteTodoAction |\n  ToggleAllTodosAction |\n  ClearAllCompletedTodosAction;\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../app.reducers';\nimport { ToggleAllTodosAction } from './todo.actions';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styles: []\n})\nexport class TodoComponent implements OnInit {\n  checkToggleAll: FormControl;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.checkToggleAll = new FormControl();\n    this.checkToggleAll.valueChanges.subscribe(value => {\n      const action = new ToggleAllTodosAction(value);\n      this.store.dispatch(action);\n    });\n  }\n}\n","export class Todo {\n  id: number;\n  text: string;\n  completed: boolean;\n\n  constructor(text: string) {\n    this.id = Math.random();\n    this.text = text.charAt(0).toUpperCase() + text.slice(1);\n    this.completed = false;\n  }\n}\n","import * as FromTodoActions from './todo.actions';\nimport { Todo } from './todo.model';\n\nconst initialState: Todo[] = [];\n\nexport function todoReducer(state: Todo[] = initialState, action: FromTodoActions.TodoActions): Todo[] {\n  switch (action.type) {\n    case FromTodoActions.ADD_TODO:\n      const todo = new Todo(action.text);\n      return [...state, todo];\n    case FromTodoActions.TOGGLE_TODO:\n      return state.map(todoEdit => {\n        if (todoEdit.id === action.id) {\n          return {\n            ...todoEdit,\n            completed: !todoEdit.completed\n          };\n        } else {\n          return todoEdit;\n        }\n      });\n    case FromTodoActions.TOGGLE_TODO:\n      return state.map(todoEdit => {\n        if (todoEdit.id === action.id) {\n          return {\n            ...todoEdit,\n            completed: !todoEdit.completed\n          };\n        } else {\n          return todoEdit;\n        }\n      });\n    case FromTodoActions.EDIT_TODO:\n      return state.map(todoEdit => {\n        if (todoEdit.id === action.id && action.text) {\n          return {\n            ...todoEdit,\n            text: action.text\n          };\n        } else {\n          return todoEdit;\n        }\n      });\n    case FromTodoActions.DELETE_TODO:\n      return state.filter(todoEdit => todoEdit.id !== action.id);\n    case FromTodoActions.TOGGLE_ALL_TODOS:\n      return state.map(todoEdit => {\n        return {\n          ...todoEdit,\n          completed: action.completed\n        };\n      });\n    case FromTodoActions.CLEAR_ALL_COMPLETED_TODOS:\n      return state.filter(todoEdit => !todoEdit.completed);\n    default:\n      return state;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}